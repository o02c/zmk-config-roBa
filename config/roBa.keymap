#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 1
#define SCROLL 2
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <200>;
};

&lt { quick-tap-ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        kana {
            bindings = <&kp LANG1>;
            key-positions = <30 31>;
        };

        eisuu {
            bindings = <&kp LANG2>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none    &none  &kp L        &kp U               &kp F                                              &kp W             &kp R           &kp Y        &none    &none
&lt 4 Q  &kp E  &mt LCTRL I  &mt LEFT_ALT A      &mt LEFT_SHIFT O  &kp MINUS      &kp K             &mt LEFT_SHIFT T  &mt LEFT_ALT N  &mt LCTRL S  &lt 1 H  &kp P
&none    &kp Z  &kp X        &kp C               &kp V             &kp COMMA      &kp G             &kp D             &kp M           &kp J        &kp B    &none
&none    &none  &mo 1        &mt LEFT_WIN ENTER  &lt 2 BACKSPACE   &lt 4 ESC      &mt LEFT_WIN TAB  &lt 3 SPACE                                             &tog 1
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp K_MUTE                                      &kp LC(PAGE_UP)  &mkp MB3       &kp LC(PAGE_DOWN)  &trans         &trans
&trans  &trans  &trans             &trans        &trans      &kp C_PLAY_PAUSE      &kp LG(LEFT)  &mkp MB1         &mo 2          &mkp MB2           &kp LG(RIGHT)  &trans
&trans  &trans  &trans             &trans        &trans      &trans                &trans        &kp LG(W)        &kp LG(LS(T))  &trans             &trans         &trans
&trans  &trans  &trans             &trans        &trans      &trans                &trans        &trans                                                            &trans
            >;
        };

        SCROLL_NUM {
            bindings = <
&none      &none      &kp N1        &kp N2           &kp N3                                                &kp LT               &kp EQUAL           &kp GT           &none     &none
&kp TILDE  &kp N0     &mt LCTRL N4  &mt LEFT_ALT N5  &mt LEFT_SHIFT N6  &kp BACKSLASH      &kp CARET       &mt LEFT_SHIFT PLUS  &mt LEFT_ALT MINUS  &mt LCTRL ASTRK  &kp FSLH  &kp PRCNT
&none      &kp POUND  &kp N7        &kp N8           &kp N9             &kp DOT            &kp UNDERSCORE  &kp COLON            &kp EXCL            &kp QUESTION     &kp SEMI  &none
&trans     &trans     &trans        &trans           &trans             &trans             &trans          &trans                                                              &trans
            >;
        };

        ARROW {
            bindings = <
&none   &none        &kp LBKT                    &kp DOUBLE_QUOTES          &kp RBKT                                                   &kp HOME             &kp UP             &kp END          &trans  &trans
&none   &kp DOLLAR   &mt LCTRL LEFT_PARENTHESIS  &mt LEFT_ALT SINGLE_QUOTE  &mt LEFT_SHIFT RIGHT_PARENTHESIS  &kp AMPS      &kp PG_UP  &mt LEFT_SHIFT LEFT  &mt LEFT_ALT DOWN  &mt LCTRL RIGHT  &trans  &trans
&none   &kp AT_SIGN  &kp LEFT_BRACE              &kp GRAVE                  &kp RIGHT_BRACE                   &kp PIPE      &kp PG_DN  &kp ESC              &kp DEL            &trans           &trans  &trans
&trans  &trans       &trans                      &trans                     &trans                            &trans        &trans     &trans                                                           &trans
            >;
        };

        BT_FUNCTION {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                        &kp F1  &kp F2   &kp F3   &kp F4   &none
&trans      &trans        &kp LCTRL     &kp LEFT_ALT  &kp LEFT_SHIFT  &trans      &none   &kp F5  &kp F6   &kp F7   &kp F8   &none
&trans      &trans        &trans        &trans        &trans          &trans      &none   &kp F9  &kp F10  &kp F11  &kp F12  &none
&trans      &trans        &trans        &trans        &trans          &trans      &trans  &trans                             &trans
            >;
        };
    };
};
